@model CIS420Redux.Models.Course

@{
    ViewBag.Title = "Edit";
}


<div class="panel panel-primary" style="margin-top: 15px;">
    <div class="panel-heading" style="background-color:  rgb(227, 27, 35); text-align: center;">
        <h3>Edit Course</h3>
    </div>
</div>


<div class="container">
    <div class="wrapper">
        <form action="" method="post" name="Login_Form" class="form-signin">
            <h3 class="form-signin-heading" style="color:  rgb(227, 27, 35)">Edit Course</h3>
            <hr class="colorgraph" style="background:  rgb(227, 27, 35)"><br>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Title, "Title", htmlAttributes: new { @class = "control-label col-md-2", @placeholder = "Title" })*@<label style="color:black;">Title:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Subject, "Subject", htmlAttributes: new { @class = "control-label col-md-2", @placeholder = "Subject" })*@<label style="color:black;">Subject:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @placeholder = "Subject" } })
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.CatalogNumber, "Catalog Number", htmlAttributes: new { @class = "control-label col-md-2", @placeholder = "Catalog Number" })*@<label style="color:black;">Catalog Number:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.CatalogNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Catalog Number" } })
                            @Html.ValidationMessageFor(model => model.CatalogNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Credits, "Credits", htmlAttributes: new { @class = "control-label col-md-2", @placeholder = "Credits" })*@<label style="color:black;">Credits:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.Credits, new { htmlAttributes = new { @class = "form-control", @placeholder = "Credits" } })
                            @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ProgramId, "Program", htmlAttributes: new { @class = "control-label col-md-2" })*@<label style="color: black;">Program Name:</label>
                        <div class="col-md-15">
                            @Html.DropDownList("ProgramId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-10">
                            <input type="submit" value="Save" class="btn btn-danger" />
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</div>
            <div>
                <button class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Course")'">Back to List</button>
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
