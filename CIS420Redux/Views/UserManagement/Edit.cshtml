@model CIS420Redux.Models.ViewModels.EditUserViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="panel" style="margin-top:15px; border-color: none;">
    <div class="panel-heading" style="background-color: rgb(227, 27, 35); text-align: center">
        <h3>Edit User Role</h3>
    </div>
</div>
<div>
    <button class="btn btn-danger col-md-2 pull-left" onclick="location.href='@Url.Action("Index", "UserManagement")'">Back to List</button>
</div>
<div class="container">
    <div class="wrapper">
        <form action="" method="post" name="Login_Form" class="form-signin">
            <h3 class="form-signin-heading" style="color: rgb(227, 27, 35)">Create New Student</h3>
            <hr class="colorgraph" style="background: rgb(227, 27, 35)" )"><br>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })*@ <label style="color: black;">UserName:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Name" } })
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })*@<label style="color: black;">Email:</label>
                        <div class="col-md-15">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Student Number" } })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                    <div class="form-group">
                        @*@Html.Label("Add Role Name", new { @class = "col-md-2 control-label" })*@<label style="color: black;">Add Role:</label>
                        <div class="col-md-15">
                            @Html.DropDownListFor(m => m.AddRoleName, Model.RoleNames, "Add a New Role", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.AddRoleName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @*@Html.Label("Remove Role Name", new { @class = "col-md-2 control-label" })*@<label style="color: black;">Remove Role:</label>
                        <div class="col-md-15">
                            @Html.DropDownListFor(m => m.RemoveRoleName, Model.RoleNames, "Delete a Role", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.RemoveRoleName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Roles, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @{
                                        foreach (var role in Model.Roles)
                                        {
                                            <h5>Possible Roles</h5>
                                            <p>@role.RoleName</p>
                                        }
                                    }
                                    @Html.EditorFor(model => model.RoleName)
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-10">
                            <input type="submit" value="Save" class="btn btn-danger" />
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</div>
 

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
