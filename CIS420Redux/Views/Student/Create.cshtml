@model  CIS420Redux.Models.ViewModels.Student.StudentCreateViewModel

@{
    ViewBag.Title = "Create";
}

<div class="panel panel-primary" style="margin-top: 15px;">
    <div class="panel-heading" style="background-color: rgb(227, 27, 35); text-align: center;">
        <h3>Create Student</h3>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
                       
                             <div class="form-horizontal"style="margin-left: 35%">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                                         @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                     </div>
                                 </div>

                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })
                                         @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                     </div>
                                 </div>

                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "ZipCode" } })
                                         @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                     </div>
                                 </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "PhoneNumber" } })
                                         @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                     </div>
                                 </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enrollment Date" } })
                                    @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.CampusId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.CampusId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Campus ID" } })
                                         @Html.ValidationMessageFor(model => model.CampusId, "", new { @class = "text-danger" })
                                     </div>
                                 </div>
                                 <div class="form-group">
                                     @*@Html.LabelFor(model => model.ProgramId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                     <div class="col-md-4">
                                         @Html.EditorFor(model => model.ProgramId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Program ID" } })
                                         @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                                     </div>
                                 </div>

                            <div class="form-group">
                                <div class="col-md-offset-1 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-danger" />
                                </div>
                            </div>
                           </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>

                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }
